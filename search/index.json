[{"content":"1. 两数之和 有人相爱，有人夜里开车看海，有人 leetcode 第一题都做不出来。\n暴力法 1 2 3 4 5 6 class Solution: def twoSum(self, nums: List[int], target: int) -\u0026gt; List[int]: for i in range(len(nums)): for j in range(i+1, len(nums), 1): if nums[i] + nums[j] == target: return i, j 哈希表法 1 2 3 4 5 6 7 8 9 10 11 12 class Solution: def twoSum(self, nums: List[int], target: int) -\u0026gt; List[int]: # hashtable {num: num_index, ...} M = {nums[index]: index for index in range(len(nums))} for a_index in range(len(nums)): a = nums[a_index] # a + b = target ==\u0026gt; a = target - b b = target - a # 假设存在这样的 b if b in M.keys() : # 存在则说明没问题 b_index = M[b] if a_index != b_index: # 还不能是同一个元素（题目要求元素不可重复使用） return a_index, b_index 时间复杂度 定义 对算法执行效率的估计\n算法执行时间与输入的关系\n常用大O表示法，其他可参考《算法导论》\n计算 忽略常数，找 for、while 等循环语句\n常见的有 $O(N)$、$O(M + N)$、$O(N^2)$、$O(2^N)$、$O(\\log{N})$、$O(N \\log{N})$\ne.g.$O(N)$ 1 2 3 4 5 def f(N): total = 0 for i in range(N): # 执行 N 次 total += i return total e.g. $O(log N)$ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 def binary_search(sorted_collection: list[int], item: int) -\u0026gt; int | None: \u0026#34;\u0026#34;\u0026#34;二分搜索 :param sorted_collection: some ascending sorted collection with comparable items :param item: item value to search :return: index of found item or None if item is not found Examples: \u0026gt;\u0026gt;\u0026gt; binary_search([0, 5, 7, 10, 15], 0) 0 \u0026gt;\u0026gt;\u0026gt; binary_search([0, 5, 7, 10, 15], 15) 4 \u0026gt;\u0026gt;\u0026gt; binary_search([0, 5, 7, 10, 15], 5) 1 \u0026gt;\u0026gt;\u0026gt; binary_search([0, 5, 7, 10, 15], 6) \u0026#34;\u0026#34;\u0026#34; left = 0 right = len(sorted_collection) - 1 while left \u0026lt;= right: midpoint = left + (right - left) // 2 current_item = sorted_collection[midpoint] if current_item == item: return midpoint elif item \u0026lt; current_item: right = midpoint - 1 else: left = midpoint + 1 return None 每次问题规模减小一半, i.e.\n$$ n * (\\frac{1}{2})^k = 1 $$\nn 为问题的规模，在 k 次后等于 1, 即问题解决； 在这个例子中， 则意为待搜索的数组每次都会减小一半，在 k 次后就会确定要搜索的数。\n归纳一下可得\n$$ n * \\frac{1}{2^k} = 1 $$\n$$ n = 2^k $$\n$$ k = \\log_2{n} $$\n这也就有了二分搜索的时间复杂度 $O(log N)$\n空间复杂度 O(1) 空间，变量等 O(n) 空间，一维数组等 \u0026hellip;\nlog 用不上\n数组 485. 最大连续 1 的个数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution: def findMaxConsecutiveOnes(self, nums: List[int]) -\u0026gt; int: # 若题目未给出 nums 不为空 # if not nums: # return 0 count = 0 result = 0 for i in nums: if i == 1: count = count + 1 else: # i 不是 0 就是 1\u0026lt;分类讨论\u0026gt; result = max(result, count) count = 0 return max(result, count) 283. 移动零 脑洞大开解法 1 2 3 4 5 6 7 class Solution: def moveZeroes(self, nums: List[int]) -\u0026gt; None: \u0026#34;\u0026#34;\u0026#34; Do not return anything, modify nums in-place instead. \u0026#34;\u0026#34;\u0026#34; # nums.sort(key=lambda i: 1 if i == 0 else 0), i.e. nums.sort(key= lambda i: i == 0) （算是一种）双指针法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Solution: def moveZeroes(self, nums: List[int]) -\u0026gt; None: \u0026#34;\u0026#34;\u0026#34; Do not return anything, modify nums in-place instead. \u0026#34;\u0026#34;\u0026#34; # 将所有非 0 元素移到前面 index = 0 for i in nums: if i != 0: # 第 index 个非零元素移动到nums[index] nums[index] = i index += 1 # 将剩下部分以 0 填充 for i in range(index, len(nums)): nums[i] = 0 27. 移除元素 类似 283 1 2 3 4 5 6 7 8 9 10 11 12 class Solution: def removeElement(self, nums: List[int], val: int) -\u0026gt; int: # 把不等与 val 的都移到前面 index = 0 for i in nums: if i != val: nums[index] = i index += 1 # 把后面几个等于 val 的都删掉 for _ in range(index, len(nums)): nums.pop(-1) return len(nums) 标准双指针法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution: def removeElement(self, nums: List[int], val: int) -\u0026gt; int: if not nums: return 0 l = 0 r = len(nums) - 1 while l \u0026lt; r: while l \u0026lt; r and nums[l] != val: l += 1 while l \u0026lt; r and nums[r] == val: r -= 1 # 双指针的目的 通过交换 将 val 与 !val 划分开 nums[l], nums[r] = nums[r], nums[l] return l if nums[l] == val else l + 1 ","date":"2022-07-16T11:53:30+08:00","permalink":"https://zpyg.github.io/blog/p/leetcode-%E5%88%B7%E9%A2%98-1/","title":"Leetcode 刷题 1"},{"content":" website\nChinese lectures\ntextbook(推荐，中文版本略有差异)\ntextbook-cn\nhomework using ok\n","date":"2022-07-06T18:00:54+08:00","permalink":"https://zpyg.github.io/blog/p/cs61alecture1-introduction/","title":"[CS61A]Lecture1 Introduction"},{"content":" website\nChinese lectures\ntextbook(推荐，中文版本略有差异)\ntextbook-cn\nhomework using ok\n","date":"2022-07-06T18:00:54+08:00","permalink":"https://zpyg.github.io/blog/p/cs61a-%E8%AF%BE%E7%A8%8B%E8%B5%84%E6%BA%90/","title":"CS61A 课程资源"},{"content":"tip: 恒 静 勤 实 远 诚 \u0026amp; NO 5S(Smart Phone, Short Video, Social Software, mySelf DIY Machine)\n1 normal gg\u0026lt;S-v\u0026gt;G:s/\\[x\\]/[ ]/g Daily Plan\nTIME(estimated \u0026lt;- content) TASK STATUS 5:30 get up _ 30min meditation [x] 1h10min exercise [x] 20min vocal [x] breakfast _ 1h30min 学理(不把作业看成作业，都是自己主动的学,掌握主动权) [x] 1h30min reciting [-] 1h 学文 [ ] lunch _ 1h30min reading [ ] 30min exercise [ ] 1h 学文 [x] 1h 学理 [ ] 1h30min computer science [ ] 10min 处理消息仅限于此时 _ dinner _ 1h calligraphy [ ] 40min review 文科复习 [ ] 40min review 理科改错 [ ] 21:20 go to bed _ Monthly Statistics\ncomment: 每日详细完成度可通过 git 查看\nDay STATUS 7.13 执行失败 7.14 大部分完成 浪费大概 2h 时间得考虑每日选择部分内容 目前时间不太够做完非常重实 7.15 完成基本内容 浪费大半天; 1. 不能好一天坏一天，要有固定节奏 2. 不要用长视频、连续剧情型视频娱乐，碎片时间可以背单词、背书 3. 少人际交往，说话注意考量，不要想太多 7.16 7.17 7.18 7.19 7.20 7.21 7.22 7.23 7.24 7.25 7.26 7.27 7.28 7.29 7.30 7.31 reading 艾青诗选 1/4\n万维现代文\n文言文 +词语积累 || 说明/议论文 素材积累\n中华上下五千年\nreciting 语文背诵九上一篇(尝试使用 DOG 方法) 复习 语文背诵并默写 半本书 !ipt 春 纪念白求恩 从百草园到三味书屋 假如生活欺骗了你 天上的街市 未选择的路 英语单词 60 + 复习 历史二单元（能记多少记多少） meditation https://www.bilibili.com/video/BV1Rq4y1F7r4\nexercise TODO: 加入体考训练\nTODO: 每天交替做,周计划\nmorning exercise 跑步\n拉伸\n跑步\nafternoon exercise 爬楼梯 20min\n俯卧撑\n脊柱活动\n颈部活动\nvocal https://space.bilibili.com/540564177/channel/seriesdetail?sid=217891\nhttps://www.bilibili.com/video/BV1vU4y1h7nh\ncomputer science CS61A\nleetcode\nalgorithms 算法图解\n编程通识\n计算机专业上 | 计算机专业下\nqt\nc++\nrust\npython\ntkinter web front-end\nhtml css ts/js 某框架 DIP\nopencv\nmatplotlib\ncalligraphy 汉字(行书+楷书) 基本笔画 偏旁结构 1 字帖视频 英语(意大利斜体) 于佩安-字母 连写 Chinese 万维现代文 (0/14) 议论文素材 (0/14) + resource 一些子的应试经验 homework @daily 听写 + 复习计划 4 页\n时间 任务 7.5 1.《艾青诗选》开始; 2. 听写七年级上册第一单元字词并改错; 3. 复习计划 9,10 页 7.6 1. 听写七年级上册第二单元字词; 2. 复习计划 11,12 页 7.7 1. 听写七年级上册第三单元字词; 2. 复习计划 13,14 页 7.8 1. 听写七年级上册第四单元字词; 2. 复习计划 15-18 页 7.9 1. 听写七年级上册第五单元字词; 2. 复习计划 19-22 页 7.10 1. 听写七年级上册第六单元字词; 2. 复习计划 23-25 页 7.11 1. 听写七年级下册第一单元字词; 2. 复习计划 26-27 页 7.12 1. 听写七年级下册第二单元字词; 2. 阅读《公交车在夜色中穿行》 7.13 1. 听写七年级下册第三单元字词; 2. 阅读《兰草》 7.14 1. 听写七年级下册第四单元字词; 2. 阅读《想偷一本书》 7.15 1. 听写七年级下册第五单元字词; 2. 阅读《背后那双眼》 7.16 1. 听写七年级下册第六单元字词; 2. 阅读《拉面》 7.17 1. 听写八年级上册第一单元字词; 2. 阅读《赶年集》 7.18 1. 听写八年级上册第二单元字词; 2. 阅读《秋夜》 7.19 1. 听写八年级上册第三单元字词; 2. 阅读《宣纸的前世今生》 7.20 1. 听写八年级上册第四单元字词; 2. 阅读 41 页文本 7.21 1. 听写八年级上册第五单元字词; 2. 阅读《丝路明珠——喀什》 7.22 1. 听写八年级上册第六单元字词; 2. 阅读《药品环境污染》 7.23 1. 听写八年级下册第一单元字词; 2. 阅读《中国第一台光量子计算机揭秘》 7.24 1. 听写八年级下册第二单元字词; 2. 阅读《互联网时代数字音乐产业大有可为》 7.25 1. 《艾青诗选》截止; 2. 听写八年级下册第三单元字词并改错; 3. 阅读《无人机时代正在到来》 7.26 1. 听写八年级下册第四单元字词并改错; 2. 阅读《可燃冰》 7.27 1. 听写八年级下册第五单元字词并改错; 2. 阅读《读书的体与用》 7.28 1. 听写八年级下册第六单元字词并改错; 2. 利剑总是对精神俯首称臣 8.6 1. 《水浒传》开始听写九年级上册第一单元字词并改错; 2. 阅读《全民阅读时代读书越多越好》 8.7 1. 听写九年级上册二单元字词并改错; 2. 阅读《交友之道》 8.8 1. 听写九年级上册第三单元字词并改错; 2. 阅读《生命棵长满可能的树》 8.9 1. 听写九年级上册第四单元字词并改错; 2. 阅读《母语是教育的起点》 8.10 1. 听写九年级上册第四单元字词并改错; 2. 阅读《寒门贵子贵在奋斗》 8.11 1. 听写九年级上册第五单元字词并改错; 2. 复习计划 58,59 页 8.12 1. 听写九年级上册第六单元字词并改错; 2. 复习计划 60\u0026mdash;63 页 8.13 1. 复习计划 64,65 页 8.14 1. 复习计划 66,67 页 8.15 1. 复习计划学期测试（一） 8.16 1. 复习计划学期测试（二） 8.17 1. 完成作文《翻过那座山》 8.20 1. 《水浒传》截止; 2. 完成作文《一句话的力量》 \u003c!- }}} -\u003e reading 艾青诗选 水浒传 唐诗三百首 平凡的世界 苏菲的世界 围城 世说新语 中华上下五千年 math 暑假先看学过的 多做题\n一数复习 一数每日一题 一数中考重难点 一数几何辅助线 homework @daily 册子一课\n时间 任务 7.4-5 1-4 7.6-7 5-8 7.8-10 9-14 7.11-12 15-18 7.13-14 19-22 7.15 23-25 7.16-17 26-29 7.18-19 30-33 7.20-21 34-37 7.22-23 38-41 7.24-25 43-45 7.26-27 46-49 7.28-29 50-53 7.30-31 54-57 8.1-2 58-61 8.3-4 62-65 8.5-6 66-69 8.7-8 70-73 8.9 75-76 8.10 77-78 8.11 79-80 8.12 81-82 8.13 83-85 8.14 86-87 8.15-16 88-90 8.17 91-92 8.18 93-94 8.19 95-96 8.20 97-98 8.21 99-100 8.22 101-103 8.23 104-106 8.24 1\u0026ndash;4 8.25 5\u0026ndash;8 8.26 9\u0026ndash;12 8.27 13\u0026ndash;16 8.28 17\u0026ndash;20 8.29 21\u0026ndash;24 8.30 25\u0026ndash;28 English 短语 单词 语法 七选五 词组搭配 背单词 音标 语音 CS61A + English SICP Python(这也是 English Movie 吧)\nhomework @daily 册子一课\n学个英文歌，要不就 Empty World? due:8.01 复习计划 begin:8.20 一起作业预习 begin:8.01 每日(阅读|完形填空|短文填空) morality and legality homework @daily 政治假期作业一面\n知识点 知识点背诵 history 详细版文稿 七上重点复习 +resource 七下重点复习 +resource 八上重点复习 +resource 八下重点复习 +resource homework @daily 背诵一单元\nphysics https://space.bilibili.com/299200219/video homework @daily 册子一课\n日期 任务 7.8 5、6 7.9 7、8 7.10 9、10 7.11 11、12 7.12 13、14 7.13 15、16 7.14 打卡、对 5 到 16 页答案改错 7.16 17、18 7.17 19、20 7.18 21、22 7.19 23、24 7.20 25、26 7.21 27、28 7.22 打卡、对 17 到 28 页答案 8.15 29、30 8.16 31、32 8.17 33、34 8.18 35、36 8.19 37、38 8.20 39、40 8.21 打卡、对 29 到 40 页答案 8.23 41、42 8.24 46、47 8.25 48、49 8.26 卷子 第一面 8.27 卷子 第二面 8.28 打卡、对答案 chemistry 全套课程\n元素周期表介绍\n元素周期表记忆\nhomework @daily\n文档\n符号规范书写\n符号默写\n常见物质化学式抄写\n氧气\n知识点\n","date":"2022-06-28T19:38:24+08:00","permalink":"https://zpyg.github.io/blog/p/vacation-plan/","title":"Vacation Plan"},{"content":" 入团申请书 尊敬的团组织:\n我志愿加入中国共产主义青年团。\n随着对中国历史与对科学知识的学习， 中国共产党带领中国人民战胜艰难险阻， 我对党和团的认识愈发地清晰—— 在历史和人民的选择中确立其最高的领导地位， 可以说“没有共产党就没有新中国”； 而中国共产主义青年团， 是党的助手和后备军， 是广大先进青年的群团组织。 作为新时代青年的一员， 我发自内心地坚决地拥护中国共产党， 志愿加入中国共产主义青年团。\n我们这一代青年， 生逢盛世，站在一个承前启后的、继往开来的新时代的节点上， 看党百年栉风沐雨，迎团百岁崭新征程， 二十大隆重召开。新时代的号角已然吹响， 如激昂的歌声“在辉煌事业的长河里，那永远奔腾的就是我”， 如革命先辈李大钊所写下的“以青春之我，创建青春之家庭，青春之国家，青春之民族”， 又如我们广大青年心底所共同呼唤的“请党放心，强国有我”， 更高更远的目标在前方召唤。 同时从生长环境看， 我曾长期地在农村，熟悉基层劳动生活， 爷爷是党员，深受其爱国爱党、艰苦奋斗的情深的感染； 我逐渐认识到学习先进思想的重要性，加入团组织的志愿也油然而生。\n恰同学少年，风华正茂。 如《新时代的中国青年》所指出， 朝气蓬勃、自信奋进是我辈青年的关键词。 我作为生长在这片温暖的土地上的新时代的青年学生， 友爱同学，热爱劳动，恪守道德、法律、纪律， 学习成绩较为突出，不断地努力学习、积极探索，学习新思想、新知识， 充实自我、完善自我、提高自我， 常阅读课外书籍，含计算机科学、自然科学、中外文学、音乐艺术等多个方面，汲取更多的全面的知识。\n对于入团， 我充满崇敬与向往，渴望可以早日入团。 加入团组织后， 我将严以律己，认真接受团组织培训， 团结并学习其他优秀青年优点，补全自身不足，做到全面发展\n最后， 我恳请上级组织和团支部能批准我加入中国共产主义青年团， 我会努力地做一名合格的共青团员，定不因虚度年华而悔恨，也不因碌碌无为而羞愧，有一分热，发一分光，\n此致\n敬礼\n申请人: 蒲政友\n","date":"2022-04-24T23:44:00+08:00","permalink":"https://zpyg.github.io/blog/p/%E5%85%A5%E5%9B%A2%E7%94%B3%E8%AF%B7%E4%B9%A6/","title":"入团申请书"}]